plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': 'test.technical.Main'
        )
    }
}

/*
It's modifying the jar task.
The from {} is telling the task where to get the files to include in the JAR file.
It looks at the dependencies included by the compile configuration;
if the dependency is a directory it includes its descendants as-is,
otherwise it assumes it's a ZIP file (e.g. a JAR file) and includes the entries in said file.
*/

dependencies {
    // used compile instead of implementation to appear on compile classpath when creating JAR
    compile group: 'com.opencsv', name: 'opencsv', version: '5.3'
    //implementation group: 'com.opencsv', name: 'opencsv', version: '5.3'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.0-M1'
    // 'test events were not received' below fixed it (needed api plus engine)
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.0-M1'
}

// tell Gradle build tool that we are using JUnit for testing
test {
    useJUnitPlatform()
}